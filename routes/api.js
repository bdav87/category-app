const express = require('express');
const router = express.Router();
const BigCommerce = require('node-bigcommerce');
const mysql = require('mysql');
const bcAuth = require('../lib/bc_auth');
const csv = require('fast-csv');
const fs = require('fs');
const path = require('path');

let bc;

bcAuth()
.then(data => bc = data)
.catch(err => console.log(err))

// TEST ROUTE to generate a category
router.get('/single', (req,res) => {

    function createSampleCategory(bc_api) {
        let category = {
            parent_id: 0,
            name: `Sample Category ${Math.round(Math.random() * 1000000)}`,
            description: 'A sample category generated by the app'
        }
        bc_api.post('/catalog/categories', category)
        .then(data => res.send(data))
        .catch(err => res.send(`There was an error: ${err}.}`))
    }

    if (bc) {
        createSampleCategory(bc);
    }
    
})
// When a user hits the export button all categories
// will be exported into a CSV file
router.get('/export', (req, res) => {

    function exportCategories(bc_api, path='?page=1&limit=250') {
        bc_api.get(`/catalog/categories${path}`)
        .then(categories => {
            streamToCSV(categories.data, categories.meta.pagination);
        })
        .catch(err => res.send(`Export error: ${err}.}`))
    }

    function streamToCSV(categories, meta){
        console.log(categories, meta);
        
        let category_list = categories.map(category => Object.assign({}, category))


        let csvStream = csv.createWriteStream({headers: true});
        let writableStream = fs.createWriteStream('test.csv');
        
        csvStream.pipe(writableStream);


        if (meta.current_page < meta.total_pages) {
            console.log('meta.current_page < meta.total_pages');

            category_list.forEach(category => csvStream.write(category))

            let path = meta.links.next;

            return exportCategories(bc, path);
        }

        if (category_meta.current_page == category_meta.total_pages) {
            category_list.forEach(category => csvStream.write(category));

            csvStream.end();
        }

        writableStream.on('finish', function(){
            console.log('Done with CSV');

            res.download('test.csv', (err) => {
            if (err) {
                console.log(`csv send err: ${err}`)
            }
        });

        });
        
    }

    if (bc) {
        exportCategories(bc);
    }
})

module.exports = router;
